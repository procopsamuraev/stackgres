#
# Copyright (C) 2019 OnGres, Inc.
# SPDX-License-Identifier: AGPL-3.0-or-later
#

quarkus.banner.path=banner.txt
quarkus.default-locale=en-US

# Quarkus Native Image
quarkus.native.additional-build-args=\
  -H:IncludeResources=.*/*.yaml,\
  -H:IncludeResources=.*/*.sh,\
  -H:IncludeResources=.*/*.sql,\
  -H:IncludeResources=.*/*.properties,\
  -H:IncludeResources=templates/.*,\
  --initialize-at-run-time=io.stackgres.common.ResolvConfResolverConfig

# Logger Production
quarkus.log.level=INFO
quarkus.log.min-level=TRACE
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{2.}] (%t) %s%e%n

# Logger Development
%dev.quarkus.log.level=INFO
%dev.quarkus.log.min-level=TRACE
%dev.quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{4.}] (%t) %s%e%n
%dev.quarkus.log.category."io.stackgres".level=DEBUG
%dev.quarkus.log.category."io.quarkus".level=INFO

%test.quarkus.log.category."okhttp3.mockwebserver".level=WARN

# SSL configuration
quarkus.http.ssl.certificate.files=/etc/operator/certs/tls.crt
quarkus.http.ssl.certificate.key-files=/etc/operator/certs/tls.key

# Test SSL configuration
%test.quarkus.http.ssl.certificate.files=certs/server.crt
%test.quarkus.http.ssl.certificate.key-files=certs/server-key.pem

# Authentication
quarkus.http.auth.basic=true

# StackGres Configuration
stackgres.operatorName=${stackgres.operatorName}
stackgres.operatorNamespace=${stackgres.operatorNamespace}
stackgres.operatorIP=${stackgres.operatorIP}
stackgres.containerRegistry=${stackgres.containerRegistry}
stackgres.operatorVersion=${stackgres.operatorVersion}
stackgres.operatorImageVersion=${stackgres.operatorImageVersion}
stackgres.group=${stackgres.group}
stackgres.crd.version=${stackgres.crd.version}
stackgres.prometheus.allowAutobind=${stackgres.prometheus.allowAutobind}
stackgres.documentation.uri=${stackgres.documentation.uri}
stackgres.documentation.errorsPath=${stackgres.documentation.errorsPath}
stackgres.extensionsRepositoryUrls=${stackgres.extensionsRepositoryUrls}
stackgres.lockPollInterval=${stackgres.lockPollInterval}
stackgres.lockTimeout=${stackgres.lockTimeout}
stackgres.imagePullPolicy=${stackgres.imagePullPolicy}

# jOOQ
org.jooq.no-logo=true
quarkus.log.category."org.jooq.Constants".level=OFF
quarkus.log.category."org.jooq.tools.LoggerListener".level=OFF
